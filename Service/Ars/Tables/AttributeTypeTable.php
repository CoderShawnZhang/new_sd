<?php

namespace Service\Ars\Tables;

use Yii;

/**
 * This is the model class for table "{{%attribute_type}}".
 *
 * @property int $type_id 规格编号
 * @property string $name 规格名称
 * @property string $type 类型
 * @property int $sort 排序
 * @property int $status 状态(1:可用，0:禁用)
 *
// * @property AttributeValue[] $attributeValues
 */
class AttributeTypeTable extends \yii\db\ActiveRecord
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return '{{%attribute_type}}';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['name'], 'required'],
            [['status'], 'integer'],
            [['name'], 'string', 'max' => 45],
        ];
    }

    public function fields()
    {
        $fields_array = [
            'title' => function($m){
                if($m->type == 1){
                    return $m->name.'<span class="layui-badge layui-bg-green">必选</span>';
                }
                if($m->type == 2){
                    return $m->name.'<span class="layui-badge layui-bg-cyan">可选</span>';
                }
                if($m->type == 3){
                    return $m->name.'<span class="layui-badge layui-bg-blue">分类</span>';
                }
                if($m->type == 4){
                    return $m->name.'<span class="layui-badge layui-bg-orange">参数</span>';
                }
                return $m->name;
            },
            'id' => function($m){
                return $m->type_id;
            },
            'children' => function($m){
                $data = [];
                $list = AttributeValueTable::find()->where(['type_id' => $m->type_id])->all();
                foreach($list as $key => $val){
                    $data[$key]['title'] = $val['name'];
                    $data[$key]['id'] = $val['value_id'];
                }
                return $data;
            }
        ];
        return array_merge(parent::fields(),$fields_array);
    }

    public function extraFields()
    {
//        return parent::extraFields(); // TODO: Change the autogenerated stub
        return [
            'children' => function($m){
                return $m->name;
            }
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'type_id' => '规格编号',
            'name' => '规格名称',
            'status' => '状态(1:可用，0:禁用)',
        ];
    }

    /**
     * Gets query for [[AttributeValues]].
     *
     * @return \yii\db\ActiveQuery|\Service\Ars\Querys\AttributeValueQuery
     */
    public function getAttributeValues()
    {
        return $this->hasMany(AttributeValueTable::class, ['type_id' => 'type_id']);
    }

    /**
     * {@inheritdoc}
     * @return \Service\Ars\Querys\AttributeTypeQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new \Service\Ars\Querys\AttributeTypeQuery(get_called_class());
    }
}
